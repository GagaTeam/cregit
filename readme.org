#+STARTUP: showall
#+STARTUP: lognotestate
#+TAGS:
#+SEQ_TODO: TODO STARTED DONE DEFERRED CANCELLED | WAITING DELEGATED APPT
#+DRAWERS: HIDDEN STATE
#+TITLE: 
#+CATEGORY: 
#+PROPERTY: header-args:sql             :engine postgresql  :exports both :cmdline csc370
#+PROPERTY: header-args:sqlite          :db /path/to/db  :colnames yes
#+PROPERTY: header-args:C++             :results output :flags -std=c++14 -Wall --pedantic -Werror
#+PROPERTY: header-args:R               :results output  :colnames yes
#+OPTIONS: ^:nil

* Preliminaries

- Code is written in scala, C++ and perl. 
- For scala code, use bst to build and run programs. It is the easiest
- This code has only being tested under Linux, but it should run under MacOS

* Prerequisites

| srml       | http://www.srcml.org/           | Make sure srml is in the path       |
| bfg-cregit | https://github.com/dmgerman/bfg | fork of bfg with my patches applied |

** Other

- Perl programs might require many modules. They need to be documented here
- scala code has many requirements, but they are handled by sbt

* How to build

- use sbt to compile and run the code. it is the easiest way

* How to use

a. Create the view repository. 

To tokenize the files we require to create some environment variables to communicate with the tokenizing script

| BFG_MEMO_DIR     | directory to use for memoization of tokenized files  |
| BFG_TOKENIZE_CMD | command to use to tokenize, might include parameters |

Example:

- use the tokenizeByBlobId/tokenBySha.pl to do the tokenization
- tokenBySha.pl will execute 

./tokenizeSrcMl.pl --srcml2token=<path to srcml2token> --srcml=<path to srcml> --ctags=<path to ctags-exuberant>

#+BEGIN_SRC sh
export BFG_MEMO_DIR=/tmp/memo
export BFG_TOKENIZE_CMD=/home/dmg/git.dmg/cregit-scala/tokenize/tokenizeSrcMl.pl --srcml2token=/home/dmg/git.dmg/cregit-scala/tokenize/srcMLtoken/srcml2token --srcml=srcml --ctags=ctags-exuberant
java -jar bfg-cregit.jar '--blob-exec:/home/dmg/git.dmg/cregit-scala/tokenizeByBlobId/tokenBySha.pl=.[ch]$' --no-blob-protection /path/repo
#+END_SRC

b. Create the history database for the original repo

#+BEGIN_SRC sh
run /tmp/xournal-original.db /home/dmg/git.hacking.mine/xournal 
#+END_SRC

c. Create the history database for the cregit repo

#+BEGIN_SRC sh
run /tmp/xournal-cregit.db /tmp/xournal
#+END_SRC

d. Create the authors database

#+BEGIN_SRC 
java -jar authors.jar /home/dmg/git.hacking.mine/xournal /tmp/xournal.xls /tmp/xournal-authors.db
#+END_SRC

e. Create blame of cregit files

#+BEGIN_SRC sh
perl blameRepoFiles.pl --verbose --formatBlame=./formatBlame.pl /tmp/xournal /tmp/blame '\.[ch]$
#+END_SRC

f. create the table with the map from newcommits to commits

#+BEGIN_SRC sh
java -jar remapCommits.jar /tmp/xournal-cregit.db /tmp/xournal
#+END_SRC

g. Create html version of the files

Example:

#+BEGIN_SRC sh
perl ./prettyPrintFiles.pl --verbose /tmp/xournal-cregit.db /tmp/xournal-authors.db ~/git.hacking.mine/xournal-next /tmp/blame /tmp/html https://github.com/dmgerman/xournal-next/commit/ '\.[ch]$' 
#+END_SRC




* License

The license is GPL-3.0+

